version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-runtime
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env.production
    depends_on:
      - postgres
      - python-ai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-runtime
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.production
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  python-ai:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-ai-runtime
    ports:
      - "8000:8000"
    env_file:
      - ./backend/src/ai/.env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2.00"
          memory: 4G

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=neuralfit
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
